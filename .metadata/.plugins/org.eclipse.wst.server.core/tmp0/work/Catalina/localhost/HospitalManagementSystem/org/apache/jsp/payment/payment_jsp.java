/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.109
 * Generated at: 2025-09-20 10:57:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2 1.jar", Long.valueOf(1757245690243L));
    _jspx_dependants.put("jar:file:/D:/HospitalManagementSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HospitalManagementSystem/WEB-INF/lib/jstl-1.2%201.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Payment Page</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("          crossorigin=\"anonymous\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body { color: blue; }\r\n");
      out.write("        .card { border-radius: 20px; }\r\n");
      out.write("        .form-group label { font-weight: bold; }\r\n");
      out.write("        .btn-warning { background-color: #FF8C00; border-color: #FF8C00; }\r\n");
      out.write("        .hidden { display: none; }\r\n");
      out.write("        .custom-date-format { display: inline-block; position: relative; }\r\n");
      out.write("        .custom-date-format input { padding-right: 60px; }\r\n");
      out.write("        .custom-date-format::after {\r\n");
      out.write("            content: 'MM/YY';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 10px;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            transform: translateY(-50%);\r\n");
      out.write("            color: #6c757d;\r\n");
      out.write("            pointer-events: none;\r\n");
      out.write("        }\r\n");
      out.write("        .error { color: red; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Customer/CustomerHeader.jsp", out, false);
      out.write("\r\n");
      out.write("<br><br><br>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-5 mb-5\">\r\n");
      out.write("    <div class=\"card\">\r\n");
      out.write("        <div class=\"card-body\">\r\n");
      out.write("            <h2 class=\"text-uppercase text-center mb-4\">Payment</h2>\r\n");
      out.write("\r\n");
      out.write("            <!-- Display error if present -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <form action=\"");
      out.print(request.getContextPath());
      out.write("/payment\" method=\"post\">\r\n");
      out.write("            \r\n");
      out.write("             <!-- Hidden field for appointment ID -->\r\n");
      out.write("   <input type=\"hidden\" name=\"appointmentId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.appointmentId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("                \r\n");
      out.write("                <!-- Auto-populated Amount -->\r\n");
      out.write("                <fieldset class=\"form-group\">\r\n");
      out.write("                    <label for=\"amount\">Amount:</label>\r\n");
      out.write("                    <input type=\"number\" class=\"form-control\" id=\"amount\" name=\"amount\"\r\n");
      out.write("                           value=\"500\" readonly>\r\n");
      out.write("                </fieldset>\r\n");
      out.write("\r\n");
      out.write("                <fieldset class=\"form-group\">\r\n");
      out.write("                    <label for=\"payment_date\">Payment Date:</label>\r\n");
      out.write("                    <input type=\"date\" class=\"form-control\" id=\"payment_date\" name=\"payment_date\"\r\n");
      out.write("                           value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.payment_date != null ? param.payment_date : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("                </fieldset>\r\n");
      out.write("\r\n");
      out.write("                <fieldset class=\"form-group\">\r\n");
      out.write("                    <label for=\"payment_mode\">Payment Mode:</label>\r\n");
      out.write("                    <select class=\"form-control\" id=\"payment_mode\" name=\"payment_mode\" onchange=\"togglePaymentFields()\">\r\n");
      out.write("                        <option value=\"\">Select Payment Mode</option>\r\n");
      out.write("                        <option value=\"Credit Card\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.payment_mode == 'Credit Card' ? 'selected' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Credit Card</option>\r\n");
      out.write("                        <option value=\"Debit Card\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.payment_mode == 'Debit Card' ? 'selected' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Debit Card</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </fieldset>\r\n");
      out.write("\r\n");
      out.write("                <!-- Card details fields -->\r\n");
      out.write("                <div id=\"card-details\" class=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.payment_mode == 'Credit Card' || param.payment_mode == 'Debit Card' ? '' : 'hidden'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <fieldset class=\"form-group\">\r\n");
      out.write("                        <label for=\"card_number\">Card Number:</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"card_number\" name=\"card_number\"\r\n");
      out.write("                               value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.card_number != null ? param.card_number : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                        <div id=\"card_numberError\" class=\"error\"></div>\r\n");
      out.write("                    </fieldset>\r\n");
      out.write("\r\n");
      out.write("                    <fieldset class=\"form-group custom-date-format\">\r\n");
      out.write("                        <label for=\"expire_date\">Expire Date:</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"expire_date\" name=\"expire_date\"\r\n");
      out.write("                               value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.expire_date != null ? param.expire_date : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                        <div id=\"expire_dateError\" class=\"error\"></div>\r\n");
      out.write("                    </fieldset>\r\n");
      out.write("\r\n");
      out.write("                    <fieldset class=\"form-group\">\r\n");
      out.write("                        <label for=\"cvv_number\">CVV:</label>\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" id=\"cvv_number\" name=\"cvv_number\"\r\n");
      out.write("                               value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.cvv_number != null ? param.cvv_number : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                        <div id=\"cvv_numberError\" class=\"error\"></div>\r\n");
      out.write("                    </fieldset>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Submit Payment</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("        // Set default payment date if empty\r\n");
      out.write("        var paymentDate = document.getElementById('payment_date');\r\n");
      out.write("        if (!paymentDate.value) {\r\n");
      out.write("            var today = new Date().toISOString().split('T')[0];\r\n");
      out.write("            paymentDate.value = today;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function togglePaymentFields() {\r\n");
      out.write("        var paymentMode = document.getElementById('payment_mode').value;\r\n");
      out.write("        var cardDetails = document.getElementById('card-details');\r\n");
      out.write("        cardDetails.classList.toggle('hidden', !(paymentMode === 'Credit Card' || paymentMode === 'Debit Card'));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Card number validation\r\n");
      out.write("    document.getElementById('card_number').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        document.getElementById('card_numberError').textContent =\r\n");
      out.write("            /^\\d{16}$/.test(value) ? '' : 'Card Number must be exactly 16 digits';\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Expire date validation\r\n");
      out.write("    document.getElementById('expire_date').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        document.getElementById('expire_dateError').textContent =\r\n");
      out.write("            /^\\d{2}\\/\\d{2}$/.test(value) ? '' : 'Expire Date must be in MM/YY format';\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // CVV validation\r\n");
      out.write("    document.getElementById('cvv_number').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        document.getElementById('cvv_numberError').textContent =\r\n");
      out.write("            /^\\d{3,4}$/.test(value) ? '' : 'CVV must be 3 or 4 digits';\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /payment/payment.jsp(38,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty error}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                <div class=\"alert alert-danger\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</div>\r\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
