/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.109
 * Generated at: 2025-09-20 10:25:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.register;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2 1.jar", Long.valueOf(1757245690243L));
    _jspx_dependants.put("/register/user.js", Long.valueOf(1757834901839L));
    _jspx_dependants.put("jar:file:/D:/HospitalManagementSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HospitalManagementSystem/WEB-INF/lib/jstl-1.2%201.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    \r\n");
      out.write("    <title>Sign Up | Hospital Management System</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"styles.css\">\r\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    /* General Reset */\r\n");
      out.write("    * {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Sign-Up Section */\r\n");
      out.write("    .signup {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        min-height: calc(100vh - 60px); /* Adjusting for header height */\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background: #f4f4f4;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-form {\r\n");
      out.write("        background: #fff;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        border-radius: 8px;\r\n");
      out.write("        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n");
      out.write("        max-width: 400px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .signup-form h1 {\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("        font-size: 1.5em;\r\n");
      out.write("        color: #333;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-group {\r\n");
      out.write("        margin-bottom: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("        display: block;\r\n");
      out.write("        margin-bottom: 5px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        color: #555;\r\n");
      out.write("        font-size: 0.9em; /* Adjust font size for labels */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], select {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border: 1px solid #ddd;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        font-size: 0.9em;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        background: #007BFF;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        font-size: 1em;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:hover {\r\n");
      out.write("        background: #0056b3;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .links {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-top: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .links a {\r\n");
      out.write("        color: #007BFF;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .links a:hover {\r\n");
      out.write("        text-decoration: underline;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .error-message {\r\n");
      out.write("        color: red;\r\n");
      out.write("        font-size: 0.8em;\r\n");
      out.write("        margin-top: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Responsive Design */\r\n");
      out.write("    @media (max-width: 768px) {\r\n");
      out.write("        .signup {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .signup-form {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .signup-form h1 {\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            font-size: 0.8em; /* Smaller font size for labels on mobile */\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header Section -->\r\n");

    String userRole = (String) session.getAttribute("userRole");
    if ("Admin".equals(userRole)) {
        request.getRequestDispatcher("/Admin/AdminHeader.jsp").include(request, response);
    } else { 
        request.getRequestDispatcher("/common/header.jsp").include(request, response);
    } 

      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br><br><br>\r\n");
      out.write("    <!-- Sign-Up Section -->\r\n");
      out.write("    <section class=\"signup\">\r\n");
      out.write("        <div class=\"signup-form\">\r\n");
      out.write("            <h1>Create an Account</h1>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            <form id=\"signupForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/register\" method=\"POST\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"firstName\">First Name</label>\r\n");
      out.write("                    <input type=\"text\" name=\"firstName\" id=\"firstName\" required>\r\n");
      out.write("                    <div id=\"firstNameError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"lastName\">Last Name</label>\r\n");
      out.write("                    <input type=\"text\" name=\"lastName\" id=\"lastName\" required>\r\n");
      out.write("                    <div id=\"lastNameError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"mobile\">Mobile</label>\r\n");
      out.write("                    <input type=\"text\" name=\"mobile\" id=\"mobile\" required>\r\n");
      out.write("                    <div id=\"mobileError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"email\">Email Address</label>\r\n");
      out.write("                    <input type=\"email\" id=\"email\" name=\"userEmail\" required>\r\n");
      out.write("                    <div id=\"emailError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                ");

                    String signupRole = "Customer"; // default
                    if ("Admin".equals(userRole)) {
                        signupRole = "Doctor";
                    }
                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <input type=\"hidden\" name=\"userRole\" value=\"");
      out.print( signupRole );
      out.write("\">\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"password\">Password</label>\r\n");
      out.write("                    <input type=\"password\" id=\"password\" name=\"password\" required>\r\n");
      out.write("                    <div id=\"passwordError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"confirmPassword\">Confirm Password</label>\r\n");
      out.write("                    <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required>\r\n");
      out.write("                    <div id=\"confirmPasswordError\" class=\"error-message\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <button type=\"submit\" id=\"submitButton\">Sign Up</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <div class=\"links\">\r\n");
      out.write("                <p>Already have an account? <a href=\"");
      out.print( request.getContextPath() );
      out.write("/login\">Login here</a></p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer Section -->\r\n");
      out.write("<script  type=\"text/javascript\" >");
      out.write(" function validateField(id, value, regex, errorMsg) {\r\n");
      out.write("        let errorElement = document.getElementById(id + 'Error');\r\n");
      out.write("        if (!value) {\r\n");
      out.write("            errorElement.textContent = \"This field is required\";\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (regex && !regex.test(value)) {\r\n");
      out.write("            errorElement.textContent = errorMsg;\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("            errorElement.textContent = \"\";\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function validatePassword(password) {\r\n");
      out.write("        return {\r\n");
      out.write("            lengthValid: password.length >= 6,\r\n");
      out.write("            containsDigit: /[0-9]/.test(password),\r\n");
      out.write("            containsUpper: /[A-Z]/.test(password),\r\n");
      out.write("            containsLower: /[a-z]/.test(password)\r\n");
      out.write("        };\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('firstName').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        validateField('firstName', value, /^[A-Za-z]{4,}$/, \"First Name must be at least 4 letters long and contain only letters\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('lastName').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        validateField('lastName', value, /^[A-Za-z]+$/, \"Last Name should contain only letters\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('mobile').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        validateField('mobile', value, /^[6-9]\\d{9}$/, \"Please enter a valid 10-digit mobile number starting with 6-9\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('email').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value.trim();\r\n");
      out.write("        validateField('email', value, /^[a-z0-9]+@[a-z]+\\.[a-z]{2,3}$/, \"Enter a valid email address\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('password').addEventListener('input', function() {\r\n");
      out.write("        let value = this.value;\r\n");
      out.write("        let validation = validatePassword(value);\r\n");
      out.write("        let errorElement = document.getElementById('passwordError');\r\n");
      out.write("\r\n");
      out.write("        if (!value) {\r\n");
      out.write("            errorElement.textContent = \"Please enter a password\";\r\n");
      out.write("        } else if (!validation.lengthValid) {\r\n");
      out.write("            errorElement.textContent = \"Password must be at least 6 characters long\";\r\n");
      out.write("        } else if (!validation.containsDigit) {\r\n");
      out.write("            errorElement.textContent = \"Password must include at least one digit\";\r\n");
      out.write("        } else if (!validation.containsUpper) {\r\n");
      out.write("            errorElement.textContent = \"Password must include at least one uppercase letter\";\r\n");
      out.write("        } else if (!validation.containsLower) {\r\n");
      out.write("            errorElement.textContent = \"Password must include at least one lowercase letter\";\r\n");
      out.write("        } else {\r\n");
      out.write("            errorElement.textContent = \"\";\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('confirmPassword').addEventListener('input', function() {\r\n");
      out.write("        let password = document.getElementById('password').value;\r\n");
      out.write("        let confirmPassword = this.value;\r\n");
      out.write("        let errorElement = document.getElementById('confirmPasswordError');\r\n");
      out.write("\r\n");
      out.write("        if (!confirmPassword) {\r\n");
      out.write("            errorElement.textContent = \"Please confirm your password\";\r\n");
      out.write("        } else if (password !== confirmPassword) {\r\n");
      out.write("            errorElement.textContent = \"Passwords do not match\";\r\n");
      out.write("        } else {\r\n");
      out.write("            errorElement.textContent = \"\";\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('signupForm').addEventListener('submit', function(event) {\r\n");
      out.write("        event.preventDefault(); // Prevent the form from submitting immediately\r\n");
      out.write("\r\n");
      out.write("        // Check all fields\r\n");
      out.write("        let firstName = document.getElementById('firstName').value.trim();\r\n");
      out.write("        let lastName = document.getElementById('lastName').value.trim();\r\n");
      out.write("        let mobile = document.getElementById('mobile').value.trim();\r\n");
      out.write("        let email = document.getElementById('email').value.trim();\r\n");
      out.write("        let password = document.getElementById('password').value;\r\n");
      out.write("        let confirmPassword = document.getElementById('confirmPassword').value;\r\n");
      out.write("\r\n");
      out.write("        let isValid = true;\r\n");
      out.write("        isValid = validateField('firstName', firstName, /^[A-Za-z]{4,}$/, \"First Name must be at least 4 letters long and contain only letters\");\r\n");
      out.write("        isValid = validateField('lastName', lastName, /^[A-Za-z]+$/, \"Last Name should contain only letters\");\r\n");
      out.write("        isValid = validateField('mobile', mobile, /^[6-9]\\d{9}$/, \"Please enter a valid 10-digit mobile number starting with 6-9\");\r\n");
      out.write("        isValid = validateField('email', email, /^[a-z0-9]+@[a-z]+\\.[a-z]{2,3}$/, \"Enter a valid email address\");\r\n");
      out.write("\r\n");
      out.write("        let passwordValidation = validatePassword(password);\r\n");
      out.write("        let passwordError = document.getElementById('passwordError');\r\n");
      out.write("        if (!password) {\r\n");
      out.write("            passwordError.textContent = \"Please enter a password\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else if (!passwordValidation.lengthValid) {\r\n");
      out.write("            passwordError.textContent = \"Password must be at least 6 characters long\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else if (!passwordValidation.containsDigit) {\r\n");
      out.write("            passwordError.textContent = \"Password must include at least one digit\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else if (!passwordValidation.containsUpper) {\r\n");
      out.write("            passwordError.textContent = \"Password must include at least one uppercase letter\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else if (!passwordValidation.containsLower) {\r\n");
      out.write("            passwordError.textContent = \"Password must include at least one lowercase letter\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else {\r\n");
      out.write("            passwordError.textContent = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        let confirmPasswordError = document.getElementById('confirmPasswordError');\r\n");
      out.write("        if (!confirmPassword) {\r\n");
      out.write("            confirmPasswordError.textContent = \"Please confirm your password\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else if (password !== confirmPassword) {\r\n");
      out.write("            confirmPasswordError.textContent = \"Passwords do not match\";\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else {\r\n");
      out.write("            confirmPasswordError.textContent = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (isValid) {\r\n");
      out.write("            alert('Form submitted successfully!');\r\n");
      out.write("            // You can now submit the form programmatically if needed\r\n");
      out.write("             this.submit();\r\n");
      out.write("        }\r\n");
      out.write("    });");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /register/register.jsp(141,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty errorMessage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("<div class=\"alert alert-danger mt-3\"><i class=\"fas fa-exclamation-circle\"></i> ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</div>\r\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /register/register.jsp(145,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty NOTIFICATION}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("    <div class=\"alert alert-success mt-3\">\r\n");
        out.write("        <i class=\"fas fa-check-circle\"></i> ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${NOTIFICATION}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\r\n");
        out.write("    </div>\r\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }
}
